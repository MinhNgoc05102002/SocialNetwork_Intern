@{
    ViewData["Title"] = "Messages Page";
    Layout = "_LayoutHome";
}
@using SocialNetwork.ViewModels
@model ChatSessionMessagesViewModel
@{
    SocialNetworkDbContext db = new SocialNetworkDbContext();
}
<div class="container m-auto pt-5">

    <h1 class="font-semibold lg:mb-5 text-2xl" style="display: inline-block"> Messages</h1>
    <button style ="background-color: #ec4899; display: inline-block; margin: 10px; padding: 10px; color: white; border-radius: 5px"><a href="/messages/creategroup">Create group</a></button>
    <div style="margin-bottom: 20px;" class="lg:flex lg:shadow lg:bg-white lg:space-y-0 space-y-8 rounded-md lg:-mx-0 -mx-5 overflow-hidden lg:dark:bg-gray-800">
        <!-- left message-->
        <div class="left-message lg:w-4/12 bg-white border-r overflow-hidden dark:bg-gray-800 dark:border-gray-600">
            <!-- search-->
            <form method="get" id="search-form">
                <div class="border-b px-4 py-4 dark:border-gray-600 search-left">
                    <div class="bg-gray-100 input-with-icon rounded-md dark:bg-gray-700">
                        <input name="nameSearch" id="autocomplete-input" type="text" placeholder="Search" class="bg-transparent max-h-10 shadow-none">
                        <i style="font-size: 14px;" class="fa-solid fa-magnifying-glass"></i>
                    </div>
                </div>
            </form>


            <!-- user list-->
            <div class="pb-16 w-full scrollbar list-user scroll-style-1">
                <ul class="dark:text-gray-100">
                    @foreach (var item in Model.listChatSessitonAccount)
                    {
                        <li>
                            <a href="/Messages/Chatsession/@item.Key.ChatId" class="block flex items-center py-3 px-4 space-x-3 hover:bg-gray-100 dark:hover:bg-gray-700">
                                <div class="w-12 h-12 rounded-full relative flex-shrink-0">
                                    <img src="@item.Value.Avatar" alt="" class="absolute h-full rounded-full w-full">
                                    <span class="absolute bg-green-500 border-2 border-white bottom-0 h-3 m-0.5 right-0 rounded-full shadow-md w-3"></span>
                                </div>
                                <div class="flex-1 min-w-0 relative text-gray-500">

                                    @if (!item.Key.Name.Contains(','))
                                    {
                                        <h4 class="text-black font-semibold dark:text-white">@item.Key.Name</h4>
                                    }
                                    else
                                    {
                                        <h4 class="text-black font-semibold dark:text-white">@item.Value.FullName</h4>
                                    }

                                    @if (item.Key.Messages.Count() > 0)
                                    {
                                        <span class="absolute right-0 top-1 text-xs">@item.Key.Messages.Last().CreateAt.ToString().Substring(10)</span>
                                        <p class="truncate" id="pLastMess">@item.Key.Messages.Last().MessageContent</p>
                                    }
                                    else
                                    {
                                        <span class="absolute right-0 top-1 text-xs">--</span>
                                        <p class="truncate" id="pLastMess">Say hi!</p>
                                    }
                                </div>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <!--  chatbox-->
        <div class="lg:w-8/12 bg-white dark:bg-gray-800">
            @if (Model.partner != null)
            {
                <div class="border-t dark:border-gray-600 px-5 py-4 flex uk-flex-between header-chatbox">

                    <a href="#" class="flex items-center space-x-3">
                        <div class="w-10 h-10 rounded-full relative flex-shrink-0">
                            <img src="@Model.partner.Avatar" alt="" class="h-full rounded-full w-full">
                            <span class="absolute bg-green-500 border-2 border-white bottom-0 h-3 m-0.5 right-0 rounded-full shadow-md w-3"></span>
                        </div>
                        <div class="flex-1 min-w-0 relative text-gray-500">

                            @{
                                int? chatid = Model.chatID;
                                string nameCHat = db.ChatSessions.SingleOrDefault(x => x.ChatId == chatid).Name;
                                if (nameCHat.Contains(","))
                                {
                                    nameCHat = Model.partner.FullName;
                                        }
                            }
                            <h4 class="font-semibold text-black text-lg">@nameCHat</h4>
                            <p class="font-semibold leading-3 text-green-500 text-sm">is online</p>
                        </div>
                    </a>

                    <a href="/Messages/DeleteChatSession/@Model.chatID" class="flex hover:text-red-400 items-center leading-8 space-x-2 text-red-500 font-medium">
                        <i class="fa-solid fa-trash-can"></i> <span class="lg:block hidden"> Delete Conversation </span>
                    </a>
                </div>

                <div id="scroll-message" class="force-overflow scrollbar body-chatbox scroll-style-1">
                    <div class="border-t dark:border-gray-600">

                        <div class="messageArea lg:p-8 p-4 space-y-3">
                            <!-- my message-->
                            @foreach (var item in Model.listMessage)
                            {
                                @if (item.AccountId == CurrentAccount.account.AccountId)
                                {
                                    <h3 class="lg:w-60 mx-auto text-sm uk-heading-line uk-text-center lg:pt-2"><span> @item.CreateAt </span></h3>
                                    <div class="flex lg:items-center flex-row-reverse">
                                        <div class="w-14 h-14 rounded-full relative flex-shrink-0">
                                            <img src="@CurrentAccount.account.Avatar" alt="" class="absolute h-full rounded-full w-full">
                                        </div>
                                        <div class="text-white py-2 px-3 rounded bg-blue-600 relative h-full lg:mr-5 mr-2 lg:ml-20">
                                            <p class="leading-6">@item.MessageContent <i class="uil-grin-tongue-wink"></i> </p>
                                            <div class="absolute w-3 h-3 top-3 -right-1 bg-blue-600 transform rotate-45"></div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    Account partner = db.Accounts.SingleOrDefault(x => x.AccountId == item.AccountId);
                                    <h3 class="lg:w-60 mx-auto text-sm uk-heading-line uk-text-center lg:pt-2"><span> @item.CreateAt </span></h3>
                                    <div class="flex lg:items-center">
                                        <div class="w-14 h-14 rounded-full relative flex-shrink-0">
                                            <img src="@partner.Avatar" alt="" class="absolute h-full rounded-full w-full">
                                        </div>
                                        <div class="text-gray-700 py-2 px-3 rounded bg-gray-100 h-full relative lg:ml-5 ml-2 lg:mr-20 dark:bg-gray-700 dark:text-white">
                                            <p class="leading-6">@item.MessageContent <urna class="i uil-heart"></urna> <i class="uil-grin-tongue-wink"> </i> </p>
                                            <div class="absolute w-3 h-3 top-3 -left-1 bg-gray-100 transform rotate-45 dark:bg-gray-700"></div>
                                        </div>
                                    </div>
                                }
                            }

                        </div>


                    </div>
                </div>
                <form onsubmit="handleSendMessage(event, @Model.chatID)" action="messages/SendMessage" method="post">
                    <div class="border-t flex p-6 dark:border-gray-700 footer-chatbox">
                        @*<input name="chatId" type="text" value="@Model.chatID" hidden />*@
                        <input name="mess" cols="1" rows="1" placeholder="Your Message.." class="border-0 flex-1 h-10 min-h-0 resize-none min-w-0 shadow-none dark:bg-transparent"></input>
                        <div class="flex h-full space-x-2">
                            <button type="submit" class="bg-blue-600 font-semibold px-6 py-2 rounded-md text-white">Send</button>
                        </div>
                    </div>
                </form>
            }
            else
            {
                <img src="https://media.istockphoto.com/id/1366280913/vi/vec-to/n%E1%BB%81n-t%E1%BA%A3ng-t%C3%ACnh-y%C3%AAu-tr%E1%BB%ABu-t%C6%B0%E1%BB%A3ng-tr%C3%ADch-d%E1%BA%ABn-ho%E1%BA%B7c-h%C3%ACnh-d%E1%BA%A1ng-bong-b%C3%B3ng-l%E1%BB%9Di-n%C3%B3i-tr%C3%AAn-n%E1%BB%81n-t%C3%ACnh-y%C3%AAu.jpg?s=612x612&w=0&k=20&c=ZGyPyFmzGyfbiDYdbEAMc158BVX7Erosyzz-Ky5hCfE=" style="margin:15px auto; opacity: 0.5;" />
            }

        </div>
    </div>
    <script>
        // Lấy form và trường input chứa tên message
        const form = document.getElementById('search-form');
        const input = form.querySelector('[name="nameSearch"]');
        // Xử lý sự kiện submit của form
        form.addEventListener('submit', (event) => {
            // Ngăn chặn hành động mặc định của form
            event.preventDefault();
            // Lấy giá trị của trường input chứa tên message
            const searchName = input.value;
            // Thay đổi đường dẫn trong trường action của form
            form.action = `/Messages/Search/${searchName}`;
            // Gửi form
            form.submit();
        });
        window.onload = function () {
            var divMess = document.getElementById('scroll-message');
            divMess.scrollTop = divMess.scrollHeight;
        };
    </script>

</div>
@section ScriptChatSession
    {
    <script>
        function handleSendMessage(event, chatID) {
            var messageContent = event.target.querySelector('input').value;
            var link = '/messages/SendMessage?MessageContent=' + messageContent + '&ChatId=' + chatID;
            event.preventDefault()
            $.ajax({
                url: link,
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    var messageArea = document.querySelector('.messageArea')
                    var newMessage = document.createElement('custom-tag')
                    var lastMess = document.getElementById("pLastMess")
                    lastMess.innerHTML = data.content
                    newMessage.innerHTML = `
                                <h3 class="lg:w-60 mx-auto text-sm uk-heading-line uk-text-center lg:pt-2"><span> ${data.createAt} </span></h3>
                                <div class="flex lg:items-center flex-row-reverse">
                                    <div class="w-14 h-14 rounded-full relative flex-shrink-0">
                                         <img src="${data.accountAvatar}" alt="" class="absolute h-full rounded-full w-full">
                                    </div>
                                    <div class="text-white py-2 px-3 rounded bg-blue-600 relative h-full lg:mr-5 mr-2 lg:ml-20">
                                        <p class="leading-6">${data.content} <i class="uil-grin-tongue-wink"></i> </p>
                                        <div class="absolute w-3 h-3 top-3 -right-1 bg-blue-600 transform rotate-45"></div>
                                    </div>
                                </div>
                            `
                    event.target.querySelector('input').value = "";
                    messageArea.appendChild(newMessage)
                    var divMess = document.getElementById('scroll-message');
                    divMess.scrollTop = divMess.scrollHeight;
                },
                error: function (xhr) {
                    alert(xhr.responseText);
                }
            });
        }
    </script>
}